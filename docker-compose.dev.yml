version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: castle-postgres-dev
    ports:
      - "${POSTGRES_PORT}:5432"  # .env.dev의 POSTGRES_PORT 사용
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - castle-network

  redis:
    image: redis:7-alpine
    container_name: castle-redis-dev
    ports:
      - "${REDIS_PORT}:6379"  # .env.dev의 REDIS_PORT 사용
    volumes:
      - redisdata_dev:/data
    restart: unless-stopped
    networks:
      - castle-network

  # ===== 개발 시에는 game-server를 주석 처리 =====
  # ASP.NET 서버는 Native 실행 (dotnet watch run)
  # 아래 주석을 해제하면 서버도 Docker로 실행 가능
  #
  # game-server:
  #   build:
  #     context: ./CastleLordTycoon.Server
  #     dockerfile: Dockerfile
  #   container_name: castle-server-dev
  #   ports:
  #     - "${SERVER_PORT}:8080"  # .env.dev의 SERVER_PORT 사용
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
  #     ConnectionStrings__PostgreSQL: "Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
  #     ConnectionStrings__Redis: "redis:6379"
  #     Jwt__SecretKey: ${JWT_SECRET_KEY}
  #     Jwt__Issuer: ${JWT_ISSUER}
  #     Jwt__Audience: ${JWT_AUDIENCE}
  #   depends_on:
  #     - postgres
  #     - redis
  #   networks:
  #     - castle-network
  #   restart: unless-stopped

volumes:
  pgdata_dev:
    driver: local
  redisdata_dev:
    driver: local

networks:
  castle-network:
    driver: bridge
